<!-- ゲーム画面の設定 -->
<!-- ゲームエリア用に空ボックス生成  -->
<div class="game_area">
  <input class="button_onclick" type="button" value="実行">
</div>

<!-- スクリプト実行ボタン -->
<script>
// $("input.button_onclick").click(function(){
//       $.ajax({
//             url: "static_pages/test",
//             type: "get",
//             data: {result:true
//                     },
//             dataType: "html",
//             success: function(data) {
//                 alert("success");
//             },
//             error: function(data) {
//                 alert("errror");
//             }
//         });
//     });

(function() {
  $(function() {
    return $("input.button_onclick").click(function() {
      return $.ajax({
        url: 'static_pages/test',
        type: "GET",
        dataType: 'json',
        async: true
      }).done(function(response) {
        var i, j, ref, results;
        $("#user").append("<tr><th>名前</th><th>年齢</th></tr>");
        results = [];
        for (i = j = 0, ref = response.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
          results.push($("#user").append("<tr><td>" + response[i].name + "</td><td>" + response[i].age + "</td></tr>"));
        }
        return results;
      }).fail(function(response) {
        return alert('fail');
      });
    });
  });

}).call(this);
</script>

<script>
// グローバルに展開
phina.globalize();

// 定数
var ASSETS = {
  image: {
    bg: "http://jsrun.it/assets/a/G/5/Y/aG5YD.png",
    tomapiko: 'http://cdn.rawgit.com/phi-jp/phina.js/d6eef581e20f2aacde80e895397b6b7bacb0ec15/assets/images/tomapiko_ss.png',
  },
};
var SCREEN_WIDTH  = 1920;              // スクリーン幅
var SCREEN_HEIGHT = 1080;              // スクリーン高さ
var SPEED         = 20;

/*
 * メインシーン
 */
phina.define("MainScene", {
  // 継承
  superClass: 'CanvasScene',

  // 初期化
  init: function(options) {
    // super init
    this.superInit(options);

    // 背景
    this.bg = Sprite("bg").addChildTo(this);
    this.bg.origin.set(0, 0); // 左上基準に変更
    this.bg.width = 1920;
    this.bg.height = 500;

    // プレイヤー
    this.player = Sprite('tomapiko', 64, 64).addChildTo(this);
    this.player.setPosition(1900, 450);
    this.player.frameIndex = 0;
  },

  // 更新
  update: function(app) {
    var p = app.pointer;

    if (p.getPointing()) {
      var diff = this.player.x - p.x;
      if (Math.abs(diff) > SPEED) {
        // 右に移動
        if (diff < 0) {
          this.player.x += SPEED;
          this.player.scaleX = -1;
        }
        // 左に移動
        else {
          this.player.x -= SPEED;
          this.player.scaleX = 1;
        }

        // フレームアニメーション
        if (app.frame % 4 === 0) {
          this.player.frameIndex = (this.player.frameIndex === 12) ? 13:12;
        }
      }
    }
    else {
      // 待機
      this.player.frameIndex = 0;
    }
  }
});

/*
 * メイン処理
 */
phina.main(function() {
  // アプリケーションを生成
  var app = GameApp({
    startLabel: 'main',   // MainScene から開始
    width: SCREEN_WIDTH,  // 画面幅
    height: SCREEN_HEIGHT,// 画面高さ
    assets: ASSETS,       // アセット読み込み
  });

  app.enableStats();

  // 実行
  app.run();
});
</script>

<!-- ブラウザエディタの設定 -->
<div id="editor"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.js"></script>
<script>
var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.setFontSize(14);
    editor.getSession().setMode("ace/mode/ruby");
    editor.getSession().setUseWrapMode(true);
    editor.getSession().setTabSize(2);
    
    // "Ctrl-Sで保存できるように設定"
    // editor.commands.addCommand(
    //   Name : "savefile",
    //   bindKey: {
    //     win : "Ctrl-S",
    //     mac : "Command-S"
    //   },
    //   exec: function(editor) {
    //     onSaveFile();
    //   }
    // });
</script>

<!-- 課題詳細テキストの設定 -->
<div class="question_text">
  <p>課題1</p>
  <p>こんにちは　と画面に出力する</p>
</div>
